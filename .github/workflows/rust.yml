name: Rust

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: rust-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Not needed in CI, should make things a bit faster
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  # Build smaller artifacts to avoid running out of space in CI and make it a bit faster
  RUSTFLAGS: -C strip=symbols
  RUST_BACKTRACE: full

jobs:
  cargo-fmt:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: cargo fmt
        run: cargo fmt --all -- --check

  cargo-clippy:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - macos-15
          - windows-2025

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: cargo clippy
        run: |
          cargo -Zgitoxide -Zgit clippy --locked --all-targets -- -D warnings

      - name: cargo clippy (various features)
        run: |
          for contract_path in crates/contracts/{example,system}/*; do
            contract="$(basename -- $contract_path)"
            cargo -Zgitoxide -Zgit clippy --all-targets --package $contract --features $contract/guest -- -D warnings
          done

          # TODO: Would be nice to have these as job matrix later
          cargo -Zgitoxide -Zgit clippy --all-targets --package ab-contracts-common --features ab-contracts-common/guest -- -D warnings
          cargo -Zgitoxide -Zgit clippy --all-targets --package ab-contracts-common --features ab-contracts-common/executor -- -D warnings

          cargo -Zgitoxide -Zgit clippy --all-targets --package ab-contracts-macros --features ab-contracts-macros/guest -- -D warnings

          cargo -Zgitoxide -Zgit clippy --all-targets --package ab-contracts-standards --features ab-contracts-standards/guest -- -D warnings

          cargo -Zgitoxide -Zgit clippy --all-targets --package ab-system-contract-simple-wallet-base --features ab-system-contract-simple-wallet-base/payload-builder -- -D warnings
        if: runner.os == 'Linux'

  cargo-test:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - macos-15
          - windows-2025

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-nextest
        uses: taiki-e/install-action@be7c31b6745feec79dec5eb79178466c0670bb2d # 2.47.0
        with:
          tool: cargo-nextest

      - name: cargo nextest run
        run: |
          cargo -Zgitoxide -Zgit nextest run --locked

      - name: cargo test (various features)
        run: |
          for crate_path in crates/{execution,shared}/*; do
            # Not all crates have this feature
            if ! grep --no-messages --quiet '^alloc =' "$crate_path/Cargo.toml"; then
              continue
            fi
            crate="$(basename -- $crate_path)"
            cargo -Zgitoxide -Zgit nextest run --no-tests pass --package $crate --features alloc
          done

          for contract_path in crates/contracts/{example,system}/*; do
            contract="$(basename -- $contract_path)"
            cargo -Zgitoxide -Zgit nextest run --no-tests pass --package $contract --features $contract/guest
          done

          cargo -Zgitoxide -Zgit nextest run --package ab-system-contract-simple-wallet-base --features ab-system-contract-simple-wallet-base/payload-builder
        if: runner.os == 'Linux'

  cargo-miri-test:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - macos-15
          - windows-2025

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-nextest
        uses: taiki-e/install-action@be7c31b6745feec79dec5eb79178466c0670bb2d # 2.47.0
        with:
          tool: cargo-nextest

      - name: cargo miri nextest run
        run: |
          cargo -Zgitoxide -Zgit miri nextest run

      - name: cargo miri nextest run (various features)
        run: |
          for crate_path in crates/{execution,shared}/*; do
            # Not all crates have this feature
            if ! grep --no-messages --quiet '^alloc =' "$crate_path/Cargo.toml"; then
              continue
            fi
            crate="$(basename -- $crate_path)"
            cargo -Zgitoxide -Zgit miri nextest run --no-tests pass --package $crate --features alloc
          done

          cargo -Zgitoxide -Zgit miri nextest run --package ab-system-contract-simple-wallet-base --features ab-system-contract-simple-wallet-base/payload-builder
        if: runner.os == 'Linux'

  no-panic:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - macos-15
          # TODO: Windows is pain, add it at some point if possible, but generally other platforms should be sufficient
          # - windows-2025

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Ensure no panics in annotated code
        env:
          # Increase inlining threshold to make sure the compiler can see that some functions do not panic
          RUSTFLAGS: ${{ env.RUSTFLAGS }} -Cllvm-args=--inline-threshold=1500
        run: |
          cargo -Zgitoxide -Zgit build --release --all-targets --features no-panic

      - name: Ensure no panics in annotated code (various features)
        env:
          # Increase inlining threshold to make sure the compiler can see that some functions do not panic
          RUSTFLAGS: ${{ env.RUSTFLAGS }} -Cllvm-args=--inline-threshold=1500
        run: |
          for contract_path in crates/contracts/{example,system}/*; do
            # Not all contracts have this feature yet
            if ! grep --no-messages --quiet '^no-panic =' "$contract_path/Cargo.toml"; then
              continue
            fi
            contract="$(basename -- $contract_path)"
            cargo -Zgitoxide -Zgit build --release --all-targets --features no-panic --package $contract --features $contract/guest
          done

          # TODO: Would be nice to have these as job matrix later
          # TODO: Unlock commented-out crates once they have the feature
          cargo -Zgitoxide -Zgit build --release --all-targets --features no-panic --package ab-contracts-common --features ab-contracts-common/guest
          cargo -Zgitoxide -Zgit build --release --all-targets --features no-panic --package ab-contracts-common --features ab-contracts-common/executor

          # cargo -Zgitoxide -Zgit build --release --all-targets --features no-panic --package ab-contracts-macros --features ab-contracts-macros/guest

          # cargo -Zgitoxide -Zgit build --release --all-targets --features no-panic --package ab-contracts-standards --features ab-contracts-standards/guest

          cargo -Zgitoxide -Zgit build --release --all-targets --features no-panic --package ab-system-contract-simple-wallet-base --features ab-system-contract-simple-wallet-base/payload-builder
        if: runner.os == 'Linux'

  contracts:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Ensure contracts compile for a custom target
        run: |
          for contract_path in crates/contracts/{example,system}/*; do
            contract="$(basename -- $contract_path)"
            # TODO: This uses x86-64-based target, but will have to change to riscv64e-based target eventually
            cargo -Zgitoxide -Zgit rustc -Z build-std=core --crate-type cdylib --profile contract --target crates/contracts/x86_64-unknown-none-abundance.json --package $contract --features $contract/guest
          done
        if: runner.os == 'Linux'
