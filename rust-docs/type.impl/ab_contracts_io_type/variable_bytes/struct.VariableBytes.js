(function() {
    var type_impls = Object.fromEntries([["ab_contracts_standards",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#15\">Source</a><a href=\"#impl-Debug-for-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RECOMMENDED_ALLOCATION: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#15\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ab_contracts_standards::tx_handler::TxHandlerSeal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IoType-for-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#23\">Source</a><a href=\"#impl-IoType-for-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RECOMMENDED_ALLOCATION: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a> for <a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.METADATA\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#24\">Source</a><a href=\"#associatedconstant.METADATA\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"ab_contracts_io_type/trait.IoType.html#associatedconstant.METADATA\" class=\"constant\">METADATA</a>: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h4></section></summary><div class='docblock'>Data structure metadata in binary form, describing shape and types of the contents, see\n<a href=\"ab_contracts_io_type/metadata/enum.IoTypeMetadataKind.html\" title=\"enum ab_contracts_io_type::metadata::IoTypeMetadataKind\"><code>IoTypeMetadataKind</code></a> for encoding details</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.PointerType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#85\">Source</a><a href=\"#associatedtype.PointerType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ab_contracts_io_type/trait.IoType.html#associatedtype.PointerType\" class=\"associatedtype\">PointerType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Pointer with trivial type that this <code>IoType</code> represents</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#88\">Source</a><a href=\"#method.size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.size\" class=\"fn\">size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Number of bytes that are currently used to store data</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#93\">Source</a><a href=\"#method.size_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.size_ptr\" class=\"fn\">size_ptr</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&lt;Target = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Pointer to the number of bytes that are currently used to store data. <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.size_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_mut_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#98\">Source</a><a href=\"#method.size_mut_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.size_mut_ptr\" class=\"fn\">size_mut_ptr</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a></h4></section></summary><div class='docblock'>An exclusive pointer to the number of bytes that are currently used to store data. <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.size_mut_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#103\">Source</a><a href=\"#method.capacity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Number of bytes are allocated right now</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#108\">Source</a><a href=\"#method.capacity_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.capacity_ptr\" class=\"fn\">capacity_ptr</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&lt;Target = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Number of bytes are allocated right now <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.capacity_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#114\">Source</a><a href=\"#method.set_size\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.set_size\" class=\"fn\">set_size</a>(&amp;mut self, size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Set the number of used bytes <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.set_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#129-133\">Source</a><a href=\"#method.from_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.from_ptr\" class=\"fn\">from_ptr</a>&lt;'a&gt;(\n    ptr: &amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;&lt;<a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt; as <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a>&gt;::<a class=\"associatedtype\" href=\"ab_contracts_io_type/trait.IoType.html#associatedtype.PointerType\" title=\"type ab_contracts_io_type::IoType::PointerType\">PointerType</a>&gt;,\n    size: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&lt;Target = <a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt;&gt; + 'a</h4></section></summary><div class='docblock'>Create a reference to a type, which is represented by provided memory. <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.from_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#149-153\">Source</a><a href=\"#method.from_mut_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.from_mut_ptr\" class=\"fn\">from_mut_ptr</a>&lt;'a&gt;(\n    ptr: &amp;'a mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;&lt;<a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt; as <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a>&gt;::<a class=\"associatedtype\" href=\"ab_contracts_io_type/trait.IoType.html#associatedtype.PointerType\" title=\"type ab_contracts_io_type::IoType::PointerType\">PointerType</a>&gt;,\n    size: &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> + 'a</h4></section></summary><div class='docblock'>Create a mutable reference to a type, which is represented by provided memory. <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.from_mut_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#174\">Source</a><a href=\"#method.as_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(\n    &amp;self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&lt;Target = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;&lt;<a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt; as <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a>&gt;::<a class=\"associatedtype\" href=\"ab_contracts_io_type/trait.IoType.html#associatedtype.PointerType\" title=\"type ab_contracts_io_type::IoType::PointerType\">PointerType</a>&gt;&gt;</h4></section></summary><div class='docblock'>Get a raw pointer to the underlying data with no checks. <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.as_ptr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#179\">Source</a><a href=\"#method.as_mut_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.as_mut_ptr\" class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a></h4></section></summary><div class='docblock'>Get an exclusive raw pointer to the underlying data with no checks. <a href=\"ab_contracts_io_type/trait.IoType.html#tymethod.as_mut_ptr\">Read more</a></div></details></div></details>","IoType","ab_contracts_standards::tx_handler::TxHandlerSeal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#186\">Source</a><a href=\"#impl-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RECOMMENDED_ALLOCATION: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_buffer\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#196-199\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.from_buffer\" class=\"fn\">from_buffer</a>&lt;'a&gt;(\n    buffer: &amp;'a [&lt;<a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt; as <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a>&gt;::<a class=\"associatedtype\" href=\"ab_contracts_io_type/trait.IoType.html#associatedtype.PointerType\" title=\"type ab_contracts_io_type::IoType::PointerType\">PointerType</a>],\n    size: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&lt;Target = <a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt;&gt; + 'a</h4></section></summary><div class=\"docblock\"><p>Create a new shared instance from provided memory buffer.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>buffer.len() != size</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_buffer_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#220-223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.from_buffer_mut\" class=\"fn\">from_buffer_mut</a>&lt;'a&gt;(\n    buffer: &amp;'a mut [&lt;<a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt; as <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a>&gt;::<a class=\"associatedtype\" href=\"ab_contracts_io_type/trait.IoType.html#associatedtype.PointerType\" title=\"type ab_contracts_io_type::IoType::PointerType\">PointerType</a>],\n    size: &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> + 'a</h4></section></summary><div class=\"docblock\"><p>Create a new exclusive instance from provided memory buffer.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>buffer.len() != size</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_uninit\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#242-245\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.from_uninit\" class=\"fn\">from_uninit</a>&lt;'a&gt;(\n    uninit: &amp;'a mut [<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;&lt;<a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt; as <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a>&gt;::<a class=\"associatedtype\" href=\"ab_contracts_io_type/trait.IoType.html#associatedtype.PointerType\" title=\"type ab_contracts_io_type::IoType::PointerType\">PointerType</a>&gt;],\n    size: &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> + 'a</h4></section></summary><div class=\"docblock\"><p>Create a new shared instance from provided memory buffer.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if <code>size &gt; CAPACITY</code></p>\n</div></details><section id=\"method.size\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#262\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.size\" class=\"fn\">size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#269\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Capacity in bytes</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_initialized\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#275\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.get_initialized\" class=\"fn\">get_initialized</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Try to get access to initialized bytes</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_initialized_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#284\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.get_initialized_mut\" class=\"fn\">get_initialized_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Try to get exclusive access to initialized <code>Data</code>, returns <code>None</code> if not initialized</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#296\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.append\" class=\"fn\">append</a>(&amp;mut self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Append some bytes by using more of allocated, but currently unused bytes.</p>\n<p><code>true</code> is returned on success, but if there isn’t enough unused bytes left, <code>false</code> is.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#324\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, new_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Truncate internal initialized bytes to this size.</p>\n<p>Returns <code>true</code> on success or <code>false</code> if <code>new_size</code> is larger than <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#method.size\" title=\"method ab_contracts_io_type::variable_bytes::VariableBytes::size\"><code>Self::size()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_from\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#342-344\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.copy_from\" class=\"fn\">copy_from</a>&lt;T&gt;(&amp;mut self, src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoType.html\" title=\"trait ab_contracts_io_type::IoType\">IoType</a>,</div></h4></section></summary><div class=\"docblock\"><p>Copy contents from another <code>IoType</code>.</p>\n<p>Returns <code>false</code> if actual capacity of the instance is not enough to copy contents of <code>src</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#367\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.as_mut_ptr\" class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get exclusive access to the underlying pointer with no checks.</p>\n<p>Can be used for initialization with <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#method.assume_init\" title=\"method ab_contracts_io_type::variable_bytes::VariableBytes::assume_init\"><code>Self::assume_init()</code></a> called afterward to confirm how\nmany bytes are in use right now.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#374-376\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.cast_ref\" class=\"fn\">cast_ref</a>&lt;const DIFFERENT_RECOMMENDED_ALLOCATION: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;(\n    &amp;self,\n) -&gt; &amp;<a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;DIFFERENT_RECOMMENDED_ALLOCATION&gt;</h4></section></summary><div class=\"docblock\"><p>Cast a shared reference to this instance into a reference to an instance of a different\nrecommended allocation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#389-391\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.cast_mut\" class=\"fn\">cast_mut</a>&lt;const DIFFERENT_RECOMMENDED_ALLOCATION: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;(\n    &amp;mut self,\n) -&gt; &amp;mut <a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;DIFFERENT_RECOMMENDED_ALLOCATION&gt;</h4></section></summary><div class=\"docblock\"><p>Cast an exclusive reference to this instance into a reference to an instance of a different\nrecommended allocation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_trivial_type\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#405-407\">Source</a><h4 class=\"code-header\">pub fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.read_trivial_type\" class=\"fn\">read_trivial_type</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"ab_contracts_io_type/trivial_type/trait.TrivialType.html\" title=\"trait ab_contracts_io_type::trivial_type::TrivialType\">TrivialType</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reads and returns value of type <code>T</code> or <code>None</code> if there is not enough data.</p>\n<p>Checks alignment internally to support both aligned and unaligned reads.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assume_init\" class=\"method\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#435\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html#tymethod.assume_init\" class=\"fn\">assume_init</a>(&amp;mut self, size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class=\"docblock\"><p>Assume that the first <code>size</code> are initialized and can be read.</p>\n<p>Returns <code>Some(initialized_bytes)</code> on success or <code>None</code> if <code>size</code> is larger than its\ncapacity.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Caller must ensure <code>size</code> is actually initialized</p>\n</div></details></div></details>",0,"ab_contracts_standards::tx_handler::TxHandlerSeal"],["<section id=\"impl-IoTypeOptional-for-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ab_contracts_io_type/variable_bytes.rs.html#184\">Source</a><a href=\"#impl-IoTypeOptional-for-VariableBytes%3CRECOMMENDED_ALLOCATION%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const RECOMMENDED_ALLOCATION: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"ab_contracts_io_type/trait.IoTypeOptional.html\" title=\"trait ab_contracts_io_type::IoTypeOptional\">IoTypeOptional</a> for <a class=\"struct\" href=\"ab_contracts_io_type/variable_bytes/struct.VariableBytes.html\" title=\"struct ab_contracts_io_type::variable_bytes::VariableBytes\">VariableBytes</a>&lt;RECOMMENDED_ALLOCATION&gt;</h3></section>","IoTypeOptional","ab_contracts_standards::tx_handler::TxHandlerSeal"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[32554]}