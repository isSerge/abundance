searchState.loadedDescShard("ab_executor_slots", 0, "Key of the slot in <code>Slots</code>\nCollection of slots, primarily for execution environment\nRead-write access to a slot with specified owner and …\nAdd a new contract that didn’t exist before.\nAdd a new contract that didn’t exist before.\nContract that manages the slot\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet code for <code>owner</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtract all slots in the collection\nIterate over all slots in the collection\nIterate over modified slots in the collection\nCreate a new instance from a hashmap containing existing …\nCreate a new nested read-only slots instance\nCreate a new nested read-only slots instance\nCreate a new nested read-write slots instance.\nCreate a new nested read-write slots instance.\nOwner of the slot\nReset any changes that might have been done on this level\nRead-only access to a slot with specified owner and …\nRead-write access to a slot with specified owner and …")