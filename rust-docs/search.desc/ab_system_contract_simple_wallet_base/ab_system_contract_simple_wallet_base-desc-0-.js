searchState.loadedDescShard("ab_system_contract_simple_wallet_base", 0, "A simple wallet contract base contract to be used by other …\nSize of the buffer in pointers that is used for …\nSize of the buffer in entries that is used to store buffer …\nSize of the buffer in <code>u128</code> elements that is used as a …\nContext for transaction signatures, see <code>SigningContext</code>.\nTransaction seal.\nA simple wallet contract base contract to be used by other …\nExtension trait that provides helper methods for calling …\nState of the wallet.\nReads state of <code>owner</code> and returns <code>Ok(())</code> if authorization …\nReturns a new state with a changed public key\nExecutes provided transactions in the payload.\nFFI code generated by procedural macro\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns state with increased nonce\nReturns initial state with a provided public key\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis module contains generic utilities for serializing and …\nUtilities for <code>Seal</code> creation and verification\nReads state of <code>owner</code> and returns <code>Ok(())</code> if authorization …\nReturns a new state with a changed public key\nExecutes provided transactions in the payload.\nReturns state with increased nonce\nReturns initial state with a provided public key\nData structure containing expected input to …\nMethod metadata, see <code>ContractMetadataKind</code> for encoding …\nData structure containing expected input for external …\nReturns the argument unchanged.\nReturns the argument unchanged.\nSize of the contents <code>header_ptr</code> points to\nSize of the contents <code>header_ptr</code> points to\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance\nSize of the contents <code>payload_ptr</code> points to\nSize of the contents <code>payload_ptr</code> points to\nSize of the contents <code>read_slots_ptr</code> points to\nSize of the contents <code>read_slots_ptr</code> points to\nSize of the contents <code>seal_ptr</code> points to\nSize of the contents <code>seal_ptr</code> points to\nFFI interface into a method, called by the host.\nSize of the contents <code>state_ptr</code> points to\nSize of the contents <code>state_ptr</code> points to\nSize of the contents <code>write_slots_ptr</code> points to\nSize of the contents <code>write_slots_ptr</code> points to\nData structure containing expected input to …\nMethod metadata, see <code>ContractMetadataKind</code> for encoding …\nData structure containing expected input for external …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance\nCapacity of the allocated memory <code>ok_result_ptr</code> points to\nCapacity of the allocated memory <code>ok_result_ptr</code> points to\nThe size of the contents <code>ok_result_ptr</code> points to\nSize of the contents <code>ok_result_ptr</code> points to\nSize of the contents <code>public_key_ptr</code> points to\nSize of the contents <code>public_key_ptr</code> points to\nFFI interface into a method, called by the host.\nSize of the contents <code>state_ptr</code> points to\nSize of the contents <code>state_ptr</code> points to\nData structure containing expected input to …\nMethod metadata, see <code>ContractMetadataKind</code> for encoding …\nData structure containing expected input for external …\nReturns the argument unchanged.\nReturns the argument unchanged.\nSize of the contents <code>header_ptr</code> points to\nSize of the contents <code>header_ptr</code> points to\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance\nSize of the contents <code>payload_ptr</code> points to\nSize of the contents <code>payload_ptr</code> points to\nSize of the contents <code>read_slots_ptr</code> points to\nSize of the contents <code>read_slots_ptr</code> points to\nSize of the contents <code>seal_ptr</code> points to\nSize of the contents <code>seal_ptr</code> points to\nFFI interface into a method, called by the host.\nSize of the contents <code>write_slots_ptr</code> points to\nSize of the contents <code>write_slots_ptr</code> points to\nData structure containing expected input to …\nMethod metadata, see <code>ContractMetadataKind</code> for encoding …\nData structure containing expected input for external …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance\nCapacity of the allocated memory <code>ok_result_ptr</code> points to\nCapacity of the allocated memory <code>ok_result_ptr</code> points to\nThe size of the contents <code>ok_result_ptr</code> points to\nSize of the contents <code>ok_result_ptr</code> points to\nFFI interface into a method, called by the host.\nSize of the contents <code>state_ptr</code> points to\nSize of the contents <code>state_ptr</code> points to\nData structure containing expected input to …\nMethod metadata, see <code>ContractMetadataKind</code> for encoding …\nData structure containing expected input for external …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new instance\nCapacity of the allocated memory <code>ok_result_ptr</code> points to\nCapacity of the allocated memory <code>ok_result_ptr</code> points to\nThe size of the contents <code>ok_result_ptr</code> points to\nSize of the contents <code>ok_result_ptr</code> points to\nSize of the contents <code>public_key_ptr</code> points to\nSize of the contents <code>public_key_ptr</code> points to\nFFI interface into a method, called by the host.\nAlignment power is too large\n<code>ExternalArgs</code> buffer too small\nInvalid output index alignment for slot\nInvalid output index size for slot\nCall contract under <code>Address::NULL</code> context (corresponds to …\nOutput buffer offsets too small\nOutput buffer too small\nOutput index not found\nPayload too small\nToo many arguments\nThe type of transaction input could be either explicit …\nDecoder for transaction payload created using …\nErrors for <code>TransactionPayloadDecoder</code>\nThe type of transaction slot could be either explicit slot …\nCall contract under context of the wallet (corresponds to …\nTransaction payload creation utilities\nDecode the next method (if any) in the payload\nDecode the next method (if any) in the payload without …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an instance from <code>u8</code>\nCreate an instance from <code>u8</code>\nReturns <code>Some(output_index)</code> or <code>None</code> if regular input value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert instance into <code>u8</code>\nConvert instance into <code>u8</code>\nCreate new instance.\nExplicit slot address\nOutput index value.\nOutput index value.\nRegular input value with specified alignment.\nReturns <code>Some(output_index)</code> or <code>None</code> if explicit slot address\nTry to create an instance from its <code>u8</code> representation\nInvalid alignment\nInvalid output index\nMetadata decoding error\nToo many arguments\nBuilder for payload to be used with <code>TxHandler</code> (primarily …\nErrors for <code>TransactionPayloadBuilder</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns 16-byte aligned bytes.\nAdd method call to the payload.\nOther than unsafe API, this method is identical to …\nCombines <code>hash_transaction()</code> and <code>sign()</code> and returns <code>Seal</code>\nCombines <code>hash_transaction()</code> and <code>verify()</code>\nCreate transaction hash used for signing with <code>sign()</code>.\nSign transaction hash created with <code>hash_transaction()</code>.\nVerify seal created by <code>hash_and_sign()</code>.\nUtility function to authorize transaction with the wallet …\nUtility function to change public key of the wallet in a …\nUtility function to execute transaction with the wallet in …\nUtility function to initialize the state of the wallet in …")